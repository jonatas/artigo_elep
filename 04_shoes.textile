h1. Shoes


h2. O que é Shoes?

Shoes é um framework para a construção de interfaces rápidas. Shoes nasceu pra ser fácil. Realmente Feito para iniciantes absolutos. Com esta ferramenta é realmente fácil de fazer interfaces e artes gráficas. 

h2. Primeiro Exemplo - janela com botão

Este é um dos exemplos mais simples do shoes. 

<source:ruby>
Shoes.app { button("Click me!") { alert("Good job.") } } 
</source>


Este programa foi escrito em uma linguagem chamada Ruby. Consiste em uma janela com um botão. Quando o botão for clicado ela deverá responder por: "Good job." ou seja "Bom trabalho."

Shoes roda na maioria das plataformas operacionais. Isto é ótimo pois é possível escrever apenas uma vez e usar no Linux, Mac OS X, Windows e muitos outros.

!shoes_hello_world.png(exemplo rodando no Mac OS X)!

h2. Segundo Exemplo - um bloco de notas

Como próximo exemplo, será progamado um bloco de notas que possa apagar e inserir novas notas em uma janela. O programa será composto por:
** uma janela com um título "Minhas Notas", tamanho 300 pixels. E dentro desta janela terá:
*** uma linha de edição para escrever a nota
*** um botão para adicionar a anotação que quando for clicado deve:
**** adicionar o que foi escrito na linha de edição para as notas abaixo listadas
**** limpar o texto da linha de edição da nota
*** uma lista de notas que deve conter
**** a nota e um link para remover a nota

| !shoes_bloco_de_notas_executando.jpg(Exemplo de um simples bloco de notas)!  | !shoes_bloco_de_notas_codigo.jpg(Exemplo de um simples bloco de notas)! |


Conforme o exemplo da imagem e o código, ambos complementam o requisito acima descrito:

!shoes_bloco_de_notas_codigo_comentado.jpg(Código fonte do bloco de notas com os comentários conforme a especificação)! |


h2. Funcionamento do framework

Como descrito na primeira linha de código do exemplo anterior, o framework é declarado, contendo uma janela principal. Esta janela, recebe um título e um tamanho inicial.
A declaração:
<source:ruby>
Shoes.app
</source>
é básicamente uma janela empilhadora de objetos com suas definições específicas de janela. Este objeto pode encaixar muitos outros componentes internamente. Também é possível manipular elementos de fora para dentro, e de dentro para fora, fazendo com que um bloco interfira no outro sem dificuldades.

* Um bloco de código usando a linguagem de programação ruby pode ser declarado com as seguintes sintaxes:

** Bloco usando do ; end
<source:ruby>
do
// o codigo fonte vai aqui no meio
end
</source>

** Bloco usando chaves
<source:ruby>
{ // o codigo fonte vai aqui no meio }
</source>

Desta forma sabe-se que não existe diferença entre usar blocos com palavras (do;end) ou chaves ({})

Como o exemplo acima mostra, o framework Shoes basicamente é uma pilha de componentes, podendo adicionar, empilhar e remover elementos com facilidade e clareza. Estes elementos quando empilhados, podem interagir apenas empilhados ou empilhados e aninhados a outras pilhas de elementos. 

<source:ruby>Shoes.app :title => "Minhas Notas", :width => 480</source>

Estes parâmetros como título(:title) e tamanho(:width) são pertencentes a janela principal do aplicativo, e podem ser acompanhados de outros como bloqueio de redimensionamento de janela(:resizable => false).

Os parâmetros no formato <source:ruby>{:chave => 'valor'}</source> facilitam o uso e a extensão das possibilidades para cada elemento.

Descendo para a segunda linha do código existe a declaração do elemento da interface **edit_line** que é responsável pela linha de edição que permite a entrada de dados. 

<source:ruby>
@anotacao = edit_line
</source>

Este método edit_line retorna um componente do Shoes do tipo caixa de entrada de texto, e é possível acessar o valor do texto digitado através do atributo text. 

Desta forma é possível testar o funcionamento do texto que está no input com um botão que quando pressionado exibe uma mensagem de alerta com a mensagem digitada:

<source:ruby>button("ver o que está escrito na anotação atual") { alert(@anotacao.text) } </source>


